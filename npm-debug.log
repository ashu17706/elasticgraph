0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.33
4 verbose node symlink /usr/bin/node
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /home/master/.npm/3a52ce78-.lock
11 verbose tar pack [ '/home/master/.npm/epicsearch/1.0.2/package.tgz', '.' ]
12 verbose tarball /home/master/.npm/epicsearch/1.0.2/package.tgz
13 verbose folder .
14 info prepublish epicsearch@1.0.2
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /home/master/.npm/1f1177db-tar.lock
17 silly lockFile 0d3841d1-npm-epicsearch-1-0-2-package-tgz tar:///home/master/.npm/epicsearch/1.0.2/package.tgz
18 verbose lock tar:///home/master/.npm/epicsearch/1.0.2/package.tgz /home/master/.npm/0d3841d1-npm-epicsearch-1-0-2-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 0d3841d1-npm-epicsearch-1-0-2-package-tgz tar:///home/master/.npm/epicsearch/1.0.2/package.tgz
22 silly lockFile 0d3841d1-npm-epicsearch-1-0-2-package-tgz tar:///home/master/.npm/epicsearch/1.0.2/package.tgz
23 silly lockFile 92b3877f-ter-npm-epicsearch-1-0-2-package /home/master/.npm/epicsearch/1.0.2/package
24 verbose lock /home/master/.npm/epicsearch/1.0.2/package /home/master/.npm/92b3877f-ter-npm-epicsearch-1-0-2-package.lock
25 silly lockFile 92b3877f-ter-npm-epicsearch-1-0-2-package /home/master/.npm/epicsearch/1.0.2/package
26 silly lockFile 92b3877f-ter-npm-epicsearch-1-0-2-package /home/master/.npm/epicsearch/1.0.2/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'epicsearch',
29 silly publish   version: '1.0.2',
29 silly publish   description: 'Extensions on top of Elasticsearch in Nodejs. Made with <3. Being used @ epicbeat.epictions.com',
29 silly publish   main: 'index.js',
29 silly publish   directories: { test: 'test' },
29 silly publish   dependencies:
29 silly publish    { chai: '^2.2.0',
29 silly publish      debug: '^2.1.3',
29 silly publish      elasticsearch: '^4.0.2',
29 silly publish      q: '^1.1.2',
29 silly publish      underscore: '^1.7.0' },
29 silly publish   devDependencies: {},
29 silly publish   scripts: { test: 'mocha', start: 'node server.js' },
29 silly publish   repository:
29 silly publish    { type: 'git',
29 silly publish      url: 'git@github.com/mastersilv3r/epicsearch.git' },
29 silly publish   keywords: [ 'elasticsearch', 'performance', 'percolate', 'utilities' ],
29 silly publish   author: { name: 'Silv3r' },
29 silly publish   license: 'MIT',
29 silly publish   bugs: { url: 'https://github.com/mastersilv3r/epicsearch/issues' },
29 silly publish   homepage: 'https://github.com/mastersilv3r/epicsearch',
29 silly publish   readme: '# epicsearch\nElasticsearch Nodejs client made epic!  \n\n**npm install epicsearch**    \n\nIt is elasticsearch nodejs module (latest v4.0.2) made ++ \n\nJust replace require (\'elasticsearch\') with    \n**var es = require(\'epicsearch\')**  \n\nAnd enjoy some cool functionality on top of what native elasticsearch client provides. \n\n**es.mpu({query_index: "queries",Docs:docs}).then**  \nYou can run interesting transformations, or rule based decisions, on top of a steadily flowing input stream of tweets. Allows you to update JSON documents with rules/update logic registered as percolate queries in your Elasticsearch instanced. The update logic has JSON based DSL, which is documented in percolator/mpu.js  \n\n\n**es.get_first({index:\'test\',type:\'test\',key:\'name\',val:[\'master\',\'silv3r\']},\'sort\':{\'field_name\':\'desc\'}).then**  \nSometims you want just one document matching a particular key:val pair (especially when you are trying to look for existing documents in elasticsearch, before deciding whether to replace them or get/transform/overwrite them) This shorthand allows you to retrieve one (top) document for each of the \'val\' values for the given \'key\'. It can take optional \'sort\' which will decide which document of all the documents matching given key:value should be returned.  \n\n\n**es.save_dedup({doc:{...},key:"url.unanalyzed",value:"epicbeat.epictions.com",index:"test",type:"test"}).then**  \nWorkaround for lack of unique id limitation of Elasticsearch. This helps you index (or override existing) docs based on "unique ids" stored in the key field.\n\n**es.bulk_index([{a:2},{a:3,_id:1}],{index:\'test\',type:\'test\'}).then**  \nShorter expression for ES bulk_index  \n\n\n**es.delete_dups({key:"url",size:1000,del_sort:{fetch_time:"desc"},index:"test",type:"test",multi_key:"url"}).then**  \nDelete all the duplicate from an index/type, for some field  \n\n\n**Bulk batching of queries for much better performance**  \nYou can aggregate multiple ES requests (of same kind), from different places in your application flow, into batches, without writing any extra code. All the queries shall be batched together, as per a configuration, into a single query to elasticsearch. The size of batch for each function can be individually set in config.json. This is a significant performance optimization when you are making hundreds of independent (but same kind of queries like "get_first") in one second. Currently supporting batching for get_first, bulk_index and mpu  \n\n**Dumping data to multiple destinations**\nUncomment the cloneClientParams to also bulk index data into another destination. Useful when you want  copy of your data elsewhere.  \n\n\n**Configuration**  \nHosts, default_index, and batch sizes can be set in config.json  \n\nThis module is being built with <3 while making epicbeat.epictions.com  \n\nThings to do next  \nA. Better documentation  \nB. Test cases in mocha/chai-as-promised. Current each module has console.log based checks  \nC. Some code refactoring   \nD. Adding event emmitter based on document to query match (Percolator)  \nE. Add bulk batching on all the elasticsearch methods  \n\nKeep checking out for more updates.  \n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '4c55adb6f6e20a152dc331a486c128caa2b457de',
29 silly publish   _id: 'epicsearch@1.0.2',
29 silly publish   _shasum: 'c19c4390200f17a302d41544ba451fcc2307b47f',
29 silly publish   _from: '.' }
30 verbose request where is /epicsearch
31 verbose request registry https://registry.npmjs.org/
32 verbose request id 61eb41a032330606
33 verbose url raw /epicsearch
34 verbose url resolving [ 'https://registry.npmjs.org/', './epicsearch' ]
35 verbose url resolved https://registry.npmjs.org/epicsearch
36 verbose request where is https://registry.npmjs.org/epicsearch
37 info trying registry request attempt 1 at 01:09:32
38 http PUT https://registry.npmjs.org/epicsearch
39 http 403 https://registry.npmjs.org/epicsearch
40 verbose headers { date: 'Fri, 17 Apr 2015 19:39:35 GMT',
40 verbose headers   server: 'Apache',
40 verbose headers   'content-type': 'application/json',
40 verbose headers   'cache-control': 'max-age=60',
40 verbose headers   'content-length': '95',
40 verbose headers   'accept-ranges': 'bytes',
40 verbose headers   via: '1.1 varnish',
40 verbose headers   'x-served-by': 'cache-fra1236-FRA',
40 verbose headers   'x-cache': 'MISS',
40 verbose headers   'x-cache-hits': '0',
40 verbose headers   'x-timer': 'S1429299574.045347,VS0,VE1376',
40 verbose headers   'keep-alive': 'timeout=10, max=50',
40 verbose headers   connection: 'Keep-Alive' }
41 error publish Failed PUT 403
42 error Error: "You cannot publish over the previously published version 1.0.2." : epicsearch
42 error     at RegClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
42 error     at Request._callback (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
42 error     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:236:22)
42 error     at Request.emit (events.js:98:17)
42 error     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1142:14)
42 error     at Request.emit (events.js:117:20)
42 error     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1096:12)
42 error     at IncomingMessage.emit (events.js:117:20)
42 error     at _stream_readable.js:943:16
42 error     at process._tickCallback (node.js:419:13)
43 error If you need help, you may report this *entire* log,
43 error including the npm and node versions, at:
43 error     <http://github.com/npm/npm/issues>
44 error System Linux 3.11.0-22-generic
45 error command "/usr/bin/node" "/usr/bin/npm" "publish"
46 error cwd /home/master/work/code/epicsearch
47 error node -v v0.10.33
48 error npm -v 1.4.28
49 verbose exit [ 1, true ]
